/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package library.management.sustem;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author ASPrajna
 */
public class admin_p1 extends javax.swing.JFrame {

    /**
     * Creates new form admin_p1
     */
    DefaultTableModel model;

    public admin_p1() {
        initComponents();
        model = (DefaultTableModel) jTable1.getModel();
        jTable1.setAutoResizeMode(jTable1.AUTO_RESIZE_OFF);
        TableColumn cl = jTable1.getColumnModel().getColumn(0);
        cl.setPreferredWidth(100);
        cl = jTable1.getColumnModel().getColumn(1);
        cl.setPreferredWidth(553);
        cl = jTable1.getColumnModel().getColumn(2);
        cl.setPreferredWidth(250);
        cl = jTable1.getColumnModel().getColumn(3);
        cl.setPreferredWidth(140);
        cl = jTable1.getColumnModel().getColumn(4);
        cl.setPreferredWidth(100);
        try {
            Statement stmt = null;
            ResultSet rs = null;
            String s1 = "jdbc:mysql://localhost:3306/library_management";
            String usr = "root";
            String pass = "2GI18CS001";
            Connection conn;
            conn = DriverManager.getConnection(s1, usr, pass);
            String q1 = "SELECT * FROM books;";
            stmt = conn.createStatement();
            rs = stmt.executeQuery(q1);
            while (rs.next()) {
                String t1 = rs.getString("BOOK_ID");
                String t2 = rs.getString("BOOK_NAME");
                String t3 = rs.getString("I_USN");
                String t4 = rs.getString("DATE_I");
                String t5 = rs.getString("TIME_I");
                model.insertRow(jTable1.getRowCount(), new Object[]{
                    t1, t2, t3, t4, t5

                });
                //System.out.println(t1 + " \n" + t2);

            }
        } catch (SQLException ex) {

            System.out.println(ex.getMessage());
            System.err.println("ERROR");

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(102, 51, 255));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 3, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("ADMIN PAGE");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(450, 450, 450)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTable1.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "BOOK ID", "BOOK NAME", "USN", "DATE", "TIME"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setColumnSelectionAllowed(true);
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jTable1.setDragEnabled(true);
        jTable1.setRowHeight(28);
        jTable1.setSelectionBackground(new java.awt.Color(153, 153, 255));
        jTable1.setSurrendersFocusOnKeystroke(true);
        jTable1.getTableHeader().setResizingAllowed(false);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);

        jButton2.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/library/management/sustem/home.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        jButton1.setText("RETURN");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(255, 255, 255));
        jButton3.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        jButton3.setText("REFRESH");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(255, 255, 255));
        jButton4.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        jButton4.setText("ISSUE");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton4)
                .addGap(49, 49, 49)
                .addComponent(jButton1)
                .addGap(40, 40, 40)
                .addComponent(jButton3)
                .addGap(78, 78, 78)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 553, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1)
                        .addComponent(jButton3)
                        .addComponent(jButton4))))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.setVisible(false);
        login l = new login();
        l.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String m = JOptionPane.showInputDialog("ENTER THE BOOK ID");
        String n = JOptionPane.showInputDialog("ENTER THE STUDENT USN");
        String q2 = "Select *from books where I_USN=? and BOOK_ID=? ";
        try {
            int status = 0;
            String s1 = "jdbc:mysql://localhost:3306/library_management";
            String usr = "root";
            String pass = "2GI18CS001";
            Connection conn;
            conn = DriverManager.getConnection(s1, usr, pass);
            PreparedStatement p2 = conn.prepareStatement(q2);
            p2.setString(1, n);
            p2.setString(2, m);
            ResultSet rs;
            rs = p2.executeQuery();
            while (rs.next()) {
                status = 1;

                PreparedStatement stmt = conn.prepareStatement("UPDATE `library_management`.`books` SET `I_USN` = '', `TIME_I` = '', `DATE_I` = '' WHERE (`BOOK_ID` = ?);");
                stmt.setString(1, m);//1 specifies the first parameter in the query i.e. name
                int i = stmt.executeUpdate();
                if (i == 1) {
                    JOptionPane.showMessageDialog(this, "BOOK " + m + " IS RETURNED");
                }
                stmt.close();
                conn.close();
            }
            if (status == 0) {
                JOptionPane.showMessageDialog(this, "NO BOOKS ISSUED WITH THAT ID TO YOUR USN");
                return;
            }
        } catch (SQLException ex) {

            System.out.println(ex.getMessage());
            System.err.println("ERROR");

        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        int rowCount = model.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--) {
            model.removeRow(i);
        }

        try {
            Statement stmt = null;
            ResultSet rs = null;
            String s1 = "jdbc:mysql://localhost:3306/library_management";
            String usr = "root";
            String pass = "2GI18CS001";
            Connection conn;
            conn = DriverManager.getConnection(s1, usr, pass);
            String q1 = "SELECT * FROM books;";
            stmt = conn.createStatement();
            rs = stmt.executeQuery(q1);
            while (rs.next()) {
                String t1 = rs.getString("BOOK_ID");
                String t2 = rs.getString("BOOK_NAME");
                String t3 = rs.getString("I_USN");
                String t4 = rs.getString("DATE_I");
                String t5 = rs.getString("TIME_I");
                model.insertRow(jTable1.getRowCount(), new Object[]{
                    t1, t2, t3, t4, t5

                });
                //System.out.println(t1 + " \n" + t2);

            }
        } catch (SQLException ex) {

            System.out.println(ex.getMessage());
            System.err.println("ERROR");

        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        String m = JOptionPane.showInputDialog("ENTER THE BOOK ID FOR ISSUING");
        String q2 = "Select I_USN from books where BOOK_ID=?";
        try {
            int status = 0;
            String s1 = "jdbc:mysql://localhost:3306/library_management";
            String usr = "root";
            String pass = "2GI18CS001";
            Connection conn;
            conn = DriverManager.getConnection(s1, usr, pass);
            PreparedStatement p2 = conn.prepareStatement(q2);
            p2.setString(1, m);
            ResultSet rs;
            rs = p2.executeQuery();
            while (rs.next()) {
                String t1 = rs.getString("I_USN");
                if (t1 == null) {
                    status = 1;
                    String n = JOptionPane.showInputDialog("ENTER THE USN");
                    Statement s = conn.createStatement();
                    String w="SELECT COUNT(*) AS rowcount FROM books where I_USN ="+"\'"+n+"\'";
                    ResultSet r = s.executeQuery(w);
                    r.next();
                    int count = r.getInt("rowcount");
                    r.close();
                    if(count>=6){
                        JOptionPane.showMessageDialog(this, "ALREADY 6 BOOKS ARE ISSUED");
                        return;
                    }
                    System.out.println("MyTable has " + count + " row(s).");
                    PreparedStatement stmt = conn.prepareStatement("UPDATE `library_management`.`books` SET `I_USN` = '2GI18CS002', `TIME_I` = '9:00', `DATE_I` = '19-06-2021' WHERE (`BOOK_ID` = ?);");
                    stmt.setString(1, m);

                    int i = stmt.executeUpdate();
                    if (i == 1) {
                        JOptionPane.showMessageDialog(this, "BOOK " + m + " IS ISSUED FOR " + n);
                    }
                    stmt.close();
                    conn.close();
                    return;
                }
                if (t1.isEmpty()) {
                    status = 1;
                    String n = JOptionPane.showInputDialog("ENTER THE USN");
                    Statement s = conn.createStatement();
                    String w="SELECT COUNT(*) AS rowcount FROM books where I_USN ="+"\'"+n+"\'";
                    ResultSet r = s.executeQuery(w);
                    r.next();
                    int count = r.getInt("rowcount");
                    r.close();
                    if(count>=6){
                        JOptionPane.showMessageDialog(this, "ALREADY 6 BOOKS ARE ISSUED");
                        return;
                    }
                    System.out.println("MyTable has " + count + " row(s).");
                    PreparedStatement stmt = conn.prepareStatement("UPDATE `library_management`.`books` SET `I_USN` = ? , `TIME_I` =? , `DATE_I` = ? WHERE (`BOOK_ID` = ?);");
                    stmt.setString(1, n.toUpperCase());
                    Date date = new Date();
                    SimpleDateFormat formatter = new SimpleDateFormat("dd-MM-yyyy");
                    String strDate = formatter.format(date);
                    System.out.println("Date Format  : " + strDate);
                    stmt.setString(3, strDate);
                    DateFormat dateFormat1 = new SimpleDateFormat("HH:mm");
                    String strtime = dateFormat1.format(date);
                    stmt.setString(2, strtime);
                    stmt.setString(4, m);

                    int i = stmt.executeUpdate();
                    if (i == 1) {
                        JOptionPane.showMessageDialog(this, "BOOK " + m + " IS ISSUED FOR " + n);
                    }
                    stmt.close();
                    conn.close();
                    return;
                }
                if (status == 0) {
                    JOptionPane.showMessageDialog(this, "ALREADY ISSUED TO SOMEONE");
                    return;
                }
            }
        } catch (SQLException ex) {

            System.out.println(ex.getMessage());
            System.out.println(ex.getStackTrace());
            System.err.println("ERROR");

        }
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(admin_p1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(admin_p1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(admin_p1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(admin_p1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new admin_p1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
